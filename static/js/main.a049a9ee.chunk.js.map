{"version":3,"sources":["components/Item.js","components/AddItem.js","js/drawPi.js","components/PI.js","js/setupCanvas.js","App.js","reportWebVitals.js","index.js"],"names":["Item","props","nameRef","amountRef","handleRemoveClick","e","setHiddenItems","curr","idx","useEffect","setInputRefs","prevState","className","data-idx","onClick","type","name","ref","elem","focus","AddItem","id","setItems","current","uID","updateInputDisplay","setUID","drawPi","canvas","rect","data","img","selectedColor","endAngleRadians","r","Math","PI","drawSegment","amount","color","endAngle","startAngle","total","context","save","beginPath","moveTo","width","height","arc","radius","fillStyle","fill","restore","sortedData","getContext","calculateRadius","sortedColorArray","arr","i","length","a","str","push","clearRect","fontSize","fillRect","textAlign","textBaseline","font","fillText","drawTitleSplash","key","hasOwnProperty","reduce","accum","Number","sort","objB","objA","valueA","valueB","sortData","v","k","drawMessage","text","y","textWidth","measureText","closeEnoughFontHeight","drawLegend","dataURL","toDataURL","src","Pi","canvasRef","useLayoutEffect","parent","dpr","window","devicePixelRatio","parentRect","getBoundingClientRect","scale","setupCanvas","parentElement","pRect","canvasData","imgRef","App","defaultColor","useState","hiddenItems","inputRefs","setCanvasData","setSelectedColor","autofocus","items","React","createRef","handleRadioChange","target","value","processInputData","getInputValueByName","j","getAttribute","indexOf","obj","targetName","targetAmount","filter","item","alt","onSubmit","preventDefault","rgb","map","el","checked","onChange","index","Date","getFullYear","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a049a9ee.chunk.js","sourcesContent":["import React, {useEffect} from 'react';\r\n\r\nexport default function Item(props) {\r\n  let nameRef = null;\r\n  let amountRef = null;\r\n  \r\n  const setNameRef = (elem) => {\r\n    nameRef = elem;\r\n    \r\n    if (nameRef) {\r\n      nameRef.focus();\r\n    }\r\n  }\r\n\r\n  const setAmountRef = (elem) => {\r\n    amountRef = elem;\r\n  }\r\n\r\n  function handleRemoveClick(e) {\r\n    props.setHiddenItems((curr) => [...curr, `idx-${props.idx}`]);\r\n  }\r\n\r\n  useEffect(() => {\r\n    props.setInputRefs((prevState) => [\r\n      ...prevState,\r\n      nameRef,\r\n      amountRef,\r\n    ]);\r\n  }, [\r\n    // props,\r\n    handleRemoveClick,\r\n  ]);\r\n\r\n  return (\r\n    <tr \r\n      className=\"item\"\r\n      data-idx={`idx-${props.idx}`}\r\n    >\r\n      <td>\r\n        <button\r\n          className=\"remove-item\"\r\n          onClick={handleRemoveClick}\r\n          type=\"button\"\r\n        >\r\n          <span>Remove Item</span>\r\n        </button>\r\n      </td>\r\n      <td>\r\n        <input\r\n          name={`name_${props.idx}`}\r\n          ref={setNameRef}\r\n          type=\"text\"\r\n        />\r\n      </td>\r\n      <td>\r\n        <input\r\n          name={`amount_${props.idx}`}\r\n          ref={setAmountRef}\r\n          type=\"number\"\r\n        />\r\n      </td>\r\n    </tr>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport Item from './Item';\r\n\r\nexport default function AddItem(props) {\r\n  function addItem() {\r\n    props.setItems((current) => [\r\n      ...current,\r\n      <Item\r\n        key={`idx-${props.uID}`}\r\n        idx={`${props.uID}`}\r\n        updateInputDisplay={props.updateInputDisplay}\r\n        setInputRefs={props.setInputRefs}\r\n        setHiddenItems={props.setHiddenItems}\r\n      />\r\n    ]);\r\n\r\n    props.setUID(props.uID + 1);\r\n  }\r\n\r\n  return (\r\n    <button\r\n      className=\"button add-item\"\r\n      id=\"add-item\"\r\n      onClick={addItem}\r\n      type=\"button\"\r\n    >\r\n      Slice\r\n    </button>\r\n  );\r\n}\r\n","export default function drawPi(canvas, rect, data, img, selectedColor) {\r\n  function drawTitleSplash() {\r\n    const fontSize = radius / 4;\r\n    \r\n    context.save();\r\n    \r\n    context.fillStyle = 'rgb(136, 0, 21)';\r\n    context.fillRect(0, 0, rect.width, rect.height);\r\n\r\n    context.fillStyle = '#ffffff';\r\n    context.textAlign = \"center\";\r\n    context.textBaseline = \"middle\";\r\n    context.font = `${fontSize}px sans-serif`; // base off of window?\r\n    context.fillText(\"Slices\", rect.width / 2, rect.height / 2);\r\n    context.restore();    \r\n  }\r\n  \r\n  function drawLegend() {\r\n    function drawMessage(text, y, color) {\r\n      context.save();\r\n      context.fillStyle = '#ffffff';\r\n      context.fillText(text, textWidth, y);\r\n      context.fillStyle = color;\r\n      context.fillText(text, textWidth, y);\r\n\r\n      context.restore();\r\n    }\r\n    \r\n    const fontSize = radius / 15;\r\n\r\n    context.save();\r\n\r\n    context.textAlign = \"left\";\r\n    context.textBaseline = \"top\";\r\n    context.font = `${fontSize}px sans-serif`; // base off of window?\r\n\r\n    const textWidth = context.measureText('M').width;\r\n    const closeEnoughFontHeight = 1.125 * textWidth;\r\n    \r\n    for (let i = 0; i < sortedData.length; i++) {\r\n      let k;\r\n      \r\n      for (var key in sortedData[i]) {\r\n        if (sortedData[i].hasOwnProperty(key)) {\r\n          k = key;\r\n        }\r\n      }\r\n\r\n      drawMessage(k, i * closeEnoughFontHeight + closeEnoughFontHeight, sortedColorArray[i]);\r\n    }\r\n    \r\n    context.restore();\r\n  }\r\n\r\n  function calculateRadius() {\r\n    let radius;\r\n    \r\n    if (rect.width > rect.height) {\r\n      radius = (3/4) * rect.height;\r\n    } else {\r\n      radius = (3/4) * rect.width;\r\n    }\r\n    \r\n    radius = radius / 2;\r\n\r\n    return radius;\r\n  }\r\n  \r\n  function sortData(data) {\r\n    return data.sort(function(objB, objA) {\r\n      let valueA;\r\n      let valueB;\r\n\r\n      for (let key in objA) {\r\n        if (objA.hasOwnProperty(key)) {\r\n          valueA = objA[key];\r\n        }\r\n      }\r\n      \r\n      for (let key in objB) {\r\n        if (objB.hasOwnProperty(key)) {\r\n          valueB = objB[key];\r\n        }\r\n      }\r\n      \r\n      return valueA - valueB;\r\n    }); \r\n  }\r\n    \r\n  function degreesToRadians(deg) {\r\n    return deg * Math.PI / 180;\r\n  }\r\n  \r\n  function endAngleRadians(r) {\r\n    const radians360 = degreesToRadians(360);\r\n    const angle = r * radians360;\r\n    \r\n    return angle;\r\n  }\r\n  \r\n  function drawSegment(name, amount, color) {\r\n    const ratio = amount / total;\r\n    const endAngle = startAngle - endAngleRadians(ratio);\r\n    \r\n    context.save();\r\n    \r\n    context.beginPath();\r\n    context.moveTo(rect.width / 2, rect.height / 2);\r\n    context.arc(rect.width / 2, rect.height / 2, radius, startAngle, endAngle, true);\r\n\r\n    context.fillStyle = color;\r\n    context.fill();\r\n    context.restore();\r\n\r\n    // side effects and additional mutations\r\n    startAngle = endAngle;\r\n  }\r\n  \r\n  const context = canvas.getContext('2d');\r\n  const radius = calculateRadius();\r\n  \r\n  let sortedData;\r\n  let startAngle = -Math.PI / 2;\r\n  let total = 1;\r\n  \r\n  const sortedColorArray = (function() {\r\n    const arr = [];\r\n\r\n    for (let i = 0; i < data.length; i++) {\r\n      const a = (i / data.length);\r\n      const str = `rgba(255, 255, 255, ${a})`;\r\n\r\n      arr.push(str);\r\n    }\r\n    \r\n    return arr;\r\n  }());\r\n\r\n  context.clearRect(0, 0, rect.width, rect.height);\r\n\r\n  if (data.length < 1) {\r\n    drawTitleSplash();\r\n  } else {\r\n    drawSegment('', 1, `rgb(${selectedColor}`);\r\n\r\n    total = (function() {\r\n      var arr = [];\r\n\r\n      for (let i = 0; i < data.length; i++) {\r\n        for (var key in data[i]) {\r\n          if (data[i].hasOwnProperty(key)) {\r\n            arr.push(data[i][key]);\r\n          }\r\n        }\r\n      }\r\n\r\n      if (arr.length > 0) {\r\n        return arr.reduce((accum, curr) => Number(accum) + Number(curr));        \r\n      }\r\n    }());\r\n\r\n    sortedData = sortData(data);\r\n\r\n    for (let i = 0; i < sortedData.length; i++) {\r\n      let k;\r\n      let v;\r\n\r\n      for (var key in sortedData[i]) {\r\n        if (sortedData[i].hasOwnProperty(key)) {\r\n          k = key;\r\n          v = sortedData[i][key];\r\n        }\r\n      }\r\n\r\n      const color = sortedColorArray[i];\r\n\r\n      drawSegment(k, v, color);\r\n    }\r\n\r\n    drawLegend();\r\n  }\r\n\r\n  const dataURL = canvas.toDataURL(\"image/png\");\r\n\r\n  img.src = dataURL;\r\n}\r\n","import setupCanvas from '../js/setupCanvas';\r\nimport drawPi from '../js/drawPi';\r\n\r\nimport React, {useEffect, useLayoutEffect} from 'react';\r\n\r\nexport default function Pi(props) {\r\n  const canvasRef = props.canvasRef;\r\n  \r\n  useLayoutEffect(function() {\r\n    const canvas = canvasRef.current;\r\n\r\n    if (canvas) {\r\n      setupCanvas(canvas, canvas.parentElement);\r\n    }\r\n  });\r\n\r\n  useEffect(() => {\r\n    const canvas = canvasRef.current;\r\n    const pRect = canvas.parentElement.getBoundingClientRect();\r\n\r\n    drawPi(canvas, pRect, props.canvasData, props.imgRef.current, props.selectedColor);\r\n  }, [\r\n    [props]\r\n  ]);\r\n\r\n  return (\r\n    <div className=\"canvas-wrapper\">\r\n      <canvas\r\n        id=\"pi\"\r\n        ref={props.canvasRef}\r\n      >\r\n      </canvas>\r\n    </div>\r\n  );\r\n}\r\n","export default function setupCanvas(canvas, parent) {\r\n  var dpr = window.devicePixelRatio || 1;\r\n  var context = canvas.getContext('2d');\r\n\r\n  var parentRect = parent.getBoundingClientRect();\r\n  \r\n  canvas.width = dpr * parentRect.width;\r\n  canvas.height = dpr * parentRect.height;\r\n  \r\n  return context.scale(dpr, dpr);\r\n}","import './css/reset.css';\r\nimport './css/App.css';\r\nimport './css/buttons.css';\r\nimport './css/items.css';\r\nimport './css/pi.css';\r\n\r\nimport React, {useEffect, useState} from 'react';\r\n\r\nimport AddItem from './components/AddItem';\r\nimport Item from './components/Item';\r\nimport PI from './components/PI';\r\n\r\nfunction App() {\r\n  const defaultColor = '255, 117, 24';\r\n\r\n  const [uID, setUID] = useState(1);\r\n  const [hiddenItems, setHiddenItems] = useState([]);\r\n  const [inputRefs, setInputRefs] = useState([]);\r\n  const [canvasData, setCanvasData] = useState([]);\r\n  const [selectedColor, setSelectedColor] = useState(defaultColor);\r\n  const [items, setItems] = useState([\r\n    <Item\r\n      autofocus={true}\r\n      key={`idx-0`}\r\n      idx={`0`}\r\n      updateInputDisplay={updateInputDisplay}\r\n      setInputRefs={setInputRefs}\r\n      setHiddenItems={setHiddenItems}\r\n    />\r\n  ]);\r\n  const canvasRef = React.createRef();\r\n  const imgRef = React.createRef();\r\n\r\n  const colorInputs = () => {\r\n    const colors = [\r\n      {\r\n        name: 'pumpkin',\r\n        rgb: defaultColor,\r\n      },\r\n      {\r\n        name: 'raspberry',\r\n        rgb: '227, 11, 93',\r\n      },\r\n    ];\r\n\r\n    const arr = colors.map((el, i) => (\r\n      <label key={el.name}>\r\n        <input\r\n          checked={el.rgb === selectedColor ? true : false}\r\n          name='[]'\r\n          onChange={handleRadioChange}\r\n          type='radio'\r\n          value={el.rgb}\r\n      />\r\n        {el.name}\r\n      </label>\r\n    ));\r\n\r\n    return arr;\r\n  };\r\n\r\n  function handleRadioChange(e) {\r\n   setSelectedColor(e.target.value);\r\n  }\r\n\r\n  function processInputData() {\r\n    function getInputValueByName(name) {\r\n      let v;\r\n\r\n      for (let j = 0; j < inputRefs.length; j++) {\r\n        if (inputRefs[j].getAttribute('name') === name) {\r\n          v = inputRefs[j].value;\r\n        }\r\n      }\r\n\r\n      return v;\r\n    }\r\n\r\n    const data = (function() {\r\n      const arr = [];\r\n\r\n      for (let i = 0; i < uID; i++) {\r\n        if (hiddenItems.indexOf(`idx-${i}`) !== -1) {\r\n          continue;\r\n        }\r\n\r\n        const obj = {};\r\n        const targetName = `name_${i}`;\r\n        const targetAmount = `amount_${i}`;\r\n        const key = getInputValueByName(targetName);\r\n        const value = getInputValueByName(targetAmount);\r\n\r\n        if (key && value) {\r\n          obj[key] = value;\r\n\r\n          arr.push(obj);\r\n        }\r\n      }\r\n\r\n      return arr;\r\n    }());\r\n\r\n    setCanvasData(data);\r\n  }\r\n  \r\n  function handleSubmit(e) {\r\n    e.preventDefault();\r\n\r\n    processInputData();\r\n  }\r\n\r\n  function updateInputDisplay() {\r\n    setItems((current) => [...current].filter(item => hiddenItems.indexOf(item.key) === -1));\r\n    processInputData();\r\n  }\r\n\r\n  useEffect(() => {\r\n    updateInputDisplay();\r\n  }, [\r\n    hiddenItems,\r\n  ]);\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <main>\r\n        <PI\r\n          selectedColor={selectedColor}\r\n          canvasData={canvasData}\r\n          canvasRef={canvasRef}\r\n          imgRef={imgRef}\r\n        />\r\n        <section className=\"mainbar\">\r\n          <h1>Slices</h1>\r\n          <div className=\"figure-wrapper\">\r\n            <figure>\r\n              <img \r\n                alt=\"Canvas data renders here\"\r\n                id=\"imgPi\"\r\n                src=\"\"\r\n                ref={imgRef}\r\n              />\r\n            </figure>\r\n          </div>\r\n        </section>\r\n        <section className=\"sidebar\">\r\n          <form onSubmit={handleSubmit}>\r\n            <div className=\"color-picker\">\r\n              {colorInputs()}\r\n            </div>\r\n            {items.length > 0 ? \r\n              <table>\r\n                <thead>\r\n                  <tr>\r\n                    <th>&nbsp;</th>\r\n                    <th>Name</th>\r\n                    <th>Amount</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  {items.map((item, index) => item)}\r\n                </tbody>\r\n              </table>\r\n            : null\r\n            }\r\n            <div className=\"actions\">\r\n              <AddItem \r\n                processInputData={processInputData}\r\n                setInputRefs={setInputRefs}\r\n                setHiddenItems={setHiddenItems}\r\n                updateInputDisplay={updateInputDisplay}\r\n                setItems={setItems}\r\n                setUID={setUID}\r\n                uID={uID}\r\n              />\r\n              <button\r\n                className=\"button make-chart\"\r\n                type=\"submit\"\r\n              >\r\n                Draw\r\n              </button>\r\n            </div>\r\n          </form>\r\n          <footer>\r\n            <p><small>&copy;{new Date().getFullYear()} Mike Kang</small></p>\r\n          </footer>\r\n        </section>\r\n      </main>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}